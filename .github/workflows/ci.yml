name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  backend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Restore
        run: dotnet restore
      - name: Build
        run: dotnet build --configuration Release --no-restore
      - name: Publish
        run: dotnet publish -c Release -o publish
      - name: Upload Backend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend
          path: publish

  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Dependencies
        run: |
          cd client
          npm ci
      - name: Build Frontend
        run: |
          cd client
          npm run build --if-present
      - name: Upload Frontend Artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend
          path: client/dist

  tests:
    runs-on: ubuntu-latest
    needs: [backend-build, frontend-build]
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'
      - name: Install Frontend Dependencies
        run: |
          cd client
          npm ci
      - name: Run Frontend Tests
        run: |
          cd client
          npm test -- --watch=false --browsers=ChromeHeadless
      - name: Run Backend Tests
        run: dotnet test --no-build

  package:
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: backend
          path: package/backend
      - uses: actions/download-artifact@v3
        with:
          name: frontend
          path: package/frontend
      - name: Create Archive
        run: |
          tar -czf app.tar.gz package
      - name: Upload Package
        uses: actions/upload-artifact@v3
        with:
          name: app-package
          path: app.tar.gz

  deploy:
    runs-on: ubuntu-latest
    needs: package
    environment: staging
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: app-package
          path: .
      - name: Deploy to Staging
        env:
          STAGING_HOST: ${{ secrets.STAGING_HOST }}
          STAGING_USER: ${{ secrets.STAGING_USER }}
          STAGING_KEY: ${{ secrets.STAGING_KEY }}
        run: |
          echo "Deploying to ${STAGING_HOST}"
          # scp -i $STAGING_KEY app.tar.gz $STAGING_USER@$STAGING_HOST:/var/www/app/
          echo "Deployment script would run here"
